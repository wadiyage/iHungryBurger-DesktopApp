/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ihungryburger.ui.panels.update;

import ihungryburger.controller.BurgerController;
import ihungryburger.ui.MainFrame;
import ihungryburger.model.Burger;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Dell
 */
public class UpdateBurgerQTYPanel extends javax.swing.JPanel {
    private MainFrame mainFrame;
    public BurgerController burgerController;
    /**
     * Creates new form UpdateBurgerQTYPanel
     * @param mainFrame
     */
    public UpdateBurgerQTYPanel(MainFrame mainFrame) {
        this.mainFrame = mainFrame;
        initComponents();
        burgerController = new BurgerController();
        
        cbOrderStatus.setEnabled(false);
        txtSearchedID.setText("B");
        txtSearchedID.requestFocus();
        
        txtCustomerID.setEnabled(false);
        txtCustomerName.setEnabled(false);
        txtBurgerQty.setEnabled(false);
        
        lblTotalValue.setEnabled(false);
        
        btnQTYUpdate.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblWelcomeMessage = new javax.swing.JLabel();
        lblOrderStatus = new javax.swing.JLabel();
        cbOrderStatus = new javax.swing.JComboBox<>();
        lblOrderID = new javax.swing.JLabel();
        txtSearchedID = new javax.swing.JTextField();
        lblCustomerID = new javax.swing.JLabel();
        txtCustomerID = new javax.swing.JTextField();
        lblCustomerName = new javax.swing.JLabel();
        txtCustomerName = new javax.swing.JTextField();
        lblBurgerQTY = new javax.swing.JLabel();
        txtBurgerQty = new javax.swing.JTextField();
        lblTotal = new javax.swing.JLabel();
        lblTotalValue = new javax.swing.JLabel();
        jSeparator = new javax.swing.JSeparator();
        lblStatusAlert = new javax.swing.JLabel();
        btnQTYUpdate = new javax.swing.JButton();
        btnBackToHomePage1 = new javax.swing.JButton();
        burgerIcon = new javax.swing.JLabel();
        btnClose = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 102, 255));

        lblWelcomeMessage.setFont(new java.awt.Font("Haettenschweiler", 0, 48)); // NOI18N
        lblWelcomeMessage.setForeground(new java.awt.Color(255, 255, 255));
        lblWelcomeMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblWelcomeMessage.setText("Burger Quantity Update - iBurgerHungry");

        lblOrderStatus.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        lblOrderStatus.setText("Order Status:");

        cbOrderStatus.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        cbOrderStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DELIVERED", "PREPARING", "CANCELED" }));

        lblOrderID.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        lblOrderID.setText("Order ID:");

        txtSearchedID.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        txtSearchedID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchedIDActionPerformed(evt);
            }
        });

        lblCustomerID.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        lblCustomerID.setText("Customer ID:");

        txtCustomerID.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N

        lblCustomerName.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        lblCustomerName.setText("Name:");

        txtCustomerName.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N

        lblBurgerQTY.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        lblBurgerQTY.setText("Burger QTY:");

        txtBurgerQty.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        txtBurgerQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBurgerQtyActionPerformed(evt);
            }
        });

        lblTotal.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        lblTotal.setText("Total");

        lblTotalValue.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N

        lblStatusAlert.setFont(new java.awt.Font("News701 BT", 0, 9)); // NOI18N
        lblStatusAlert.setForeground(new java.awt.Color(255, 51, 51));

        btnQTYUpdate.setBackground(new java.awt.Color(255, 255, 0));
        btnQTYUpdate.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        btnQTYUpdate.setText("QTY UPDATE");
        btnQTYUpdate.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        btnQTYUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnQTYUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQTYUpdateActionPerformed(evt);
            }
        });

        btnBackToHomePage1.setBackground(new java.awt.Color(0, 51, 255));
        btnBackToHomePage1.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        btnBackToHomePage1.setForeground(new java.awt.Color(255, 255, 255));
        btnBackToHomePage1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        btnBackToHomePage1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBackToHomePage1.setLabel("BACK TO HOME PAGE");
        btnBackToHomePage1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackToHomePage1ActionPerformed(evt);
            }
        });

        burgerIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ihungryburger/resources/burger.png"))); // NOI18N

        btnClose.setBackground(new java.awt.Color(255, 0, 0));
        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ihungryburger/resources/close-btn.png"))); // NOI18N
        btnClose.setToolTipText("");
        btnClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCloseMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(burgerIcon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblWelcomeMessage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblCustomerName)
                                            .addComponent(lblBurgerQTY)
                                            .addComponent(lblTotal))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblCustomerID)
                                        .addGap(25, 25, 25)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblTotalValue, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(txtBurgerQty, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtCustomerName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblOrderID)
                                        .addComponent(lblOrderStatus))
                                    .addGap(19, 19, 19)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(cbOrderStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtSearchedID, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnBackToHomePage1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnQTYUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblStatusAlert, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(burgerIcon)
                            .addComponent(lblWelcomeMessage))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblOrderStatus)
                            .addComponent(cbOrderStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addComponent(jSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblOrderID)
                            .addComponent(txtSearchedID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnClose)
                        .addGap(18, 18, 18)
                        .addComponent(lblStatusAlert, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCustomerID)
                    .addComponent(txtCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCustomerName))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBurgerQTY)
                            .addComponent(txtBurgerQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTotal)
                            .addComponent(lblTotalValue, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addComponent(btnQTYUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBackToHomePage1)
                        .addGap(38, 38, 38))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchedIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchedIDActionPerformed
        String searchedID = txtSearchedID.getText();

        boolean haveAlreadyTaken;
        try {
            haveAlreadyTaken = burgerController.haveAlreadyTaken(searchedID);
            if(haveAlreadyTaken) {
                Burger burger = burgerController.retrieveBurger(searchedID);
                txtCustomerID.setText(burger.getCustomerID());
                txtCustomerName.setText(burger.getCustomerName());

                txtBurgerQty.setText(Integer.toString(burger.getBurgerQty()));

                double total = burger.getBurgerQty()*Burger.BURGERPRICE;
                lblTotalValue.setText(String.valueOf(total));

                String statusInTextMode = burgerController.getStatusInTextMode(burger.getStatus());
                cbOrderStatus.setSelectedItem(statusInTextMode);

                if(statusInTextMode.equals("DELIVERED")) {
                    lblStatusAlert.setText("<html><b>This burger has already Delivered!<b/> So, you cannot update this burger...</html>");

                    txtBurgerQty.setEnabled(false);
                    btnQTYUpdate.setEnabled(false);
                } else if(statusInTextMode.equals("CANCELED")) {
                    lblStatusAlert.setText("<html><b>This burger has already Canceled!<b/> So, you cannot update this burger...</html>");

                    txtBurgerQty.setEnabled(false);
                    btnQTYUpdate.setEnabled(false);
                } else {
                    lblStatusAlert.setText("");

                    txtBurgerQty.requestFocus();
                    txtBurgerQty.setEnabled(true);
                    btnQTYUpdate.setEnabled(true);
                }
            } else {
                JOptionPane.showMessageDialog(this, "That's invalid! Try another.", "Invalid Burger", JOptionPane.ERROR_MESSAGE);
                txtSearchedID.requestFocus();
                txtSearchedID.setText("B");

                txtCustomerID.setText("");
                txtCustomerName.setText("");

                txtBurgerQty.setText("");

                lblTotalValue.setText("");
                cbOrderStatus.setSelectedItem("DELIVERED");
            }
        } catch (IOException ex) {
            Logger.getLogger(UpdateBurgerQTYPanel.class.getName()).log(Level.SEVERE, null, ex);
        } finally {

        }
    }//GEN-LAST:event_txtSearchedIDActionPerformed

    private void txtBurgerQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBurgerQtyActionPerformed
        int burgerQty = Integer.parseInt(txtBurgerQty.getText());
        if(burgerQty>0) {
            btnQTYUpdate.requestFocusInWindow();
            btnQTYUpdate.doClick();
        } else {
            JOptionPane.showMessageDialog(this, "The burger quantity must be greater than 0. Please enter a valid number.", "Invalid Quantity", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtBurgerQtyActionPerformed

    private void btnQTYUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQTYUpdateActionPerformed
        String searchedID = txtSearchedID.getText();
        int updatedBurgerQTY = Integer.parseInt(txtBurgerQty.getText());

        boolean haveAlreadyTaken;
        try {
            haveAlreadyTaken = haveAlreadyTaken = burgerController.haveAlreadyTaken(searchedID);
            if(haveAlreadyTaken) {
                Burger burger = burgerController.retrieveBurger(searchedID);
                int confirmUpdate = JOptionPane.showConfirmDialog(this, "You're about update the place?", "Confirm Update", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if(confirmUpdate==JOptionPane.YES_OPTION) {
                    burgerController.updateQtyOfRelevantBurger(searchedID, updatedBurgerQTY);
                    JOptionPane.showMessageDialog(this, "Your burger has been updated successfully!", "Burger Update", JOptionPane.INFORMATION_MESSAGE);

                    btnQTYUpdate.setEnabled(false);

                    txtSearchedID.setText("B");

                    txtCustomerID.setText("");
                    txtCustomerID.setEnabled(false);

                    txtCustomerName.setText("");
                    txtCustomerName.setEnabled(false);

                    txtBurgerQty.setText("");
                    txtBurgerQty.setEnabled(false);

                    lblTotalValue.setText("");
                    lblTotalValue.setEnabled(false);
                } else {
                    JOptionPane.showMessageDialog(this, "Your burger update has been canceled successfully!", "Burger Update Canceled", JOptionPane.INFORMATION_MESSAGE);
                    mainFrame.showPanel("dashboard");
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(UpdateBurgerQTYPanel.class.getName()).log(Level.SEVERE, null, ex);
        } finally {

        }
    }//GEN-LAST:event_btnQTYUpdateActionPerformed

    private void btnBackToHomePage1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackToHomePage1ActionPerformed
        mainFrame.showPanel("dashboard");
    }//GEN-LAST:event_btnBackToHomePage1ActionPerformed

    private void btnCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseClicked
        mainFrame.dispose();
        System.exit(0);
    }//GEN-LAST:event_btnCloseMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackToHomePage1;
    private javax.swing.JLabel btnClose;
    private javax.swing.JButton btnQTYUpdate;
    private javax.swing.JLabel burgerIcon;
    private javax.swing.JComboBox<String> cbOrderStatus;
    private javax.swing.JSeparator jSeparator;
    private javax.swing.JLabel lblBurgerQTY;
    private javax.swing.JLabel lblCustomerID;
    private javax.swing.JLabel lblCustomerName;
    private javax.swing.JLabel lblOrderID;
    private javax.swing.JLabel lblOrderStatus;
    private javax.swing.JLabel lblStatusAlert;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblTotalValue;
    private javax.swing.JLabel lblWelcomeMessage;
    private javax.swing.JTextField txtBurgerQty;
    private javax.swing.JTextField txtCustomerID;
    private javax.swing.JTextField txtCustomerName;
    private javax.swing.JTextField txtSearchedID;
    // End of variables declaration//GEN-END:variables
}
